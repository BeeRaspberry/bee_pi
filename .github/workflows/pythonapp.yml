name: build_and_package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pip install -r test_requirements.txt
        coverage run -m pytest --junitxml=test-results/test-results.xml

    - name: Generate reports
      run: |
        coverage xml -o test-results/coverage.xml

    - name: Publish Report
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: test-results/coverage.xml

    - name: create TAR file
      if: github.ref == 'refs/heads/main'
      run: |
        echo "RELEASE=release-$(grep VERSION record_data.py | awk -F " = " '{print $NF}'|sed 's/"//g')" >> $GITHUB_ENV
        tar -zcvf files.tgz -T tar_files.txt
        env

    - name: Create Release including Artifact
      id: create_release
      uses: conventional-actions/create-release@v1
      if: github.ref == 'refs/heads/main'
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ env.RELEASE }}
        name: ${{ env.RELEASE }}
        body: |
          Changes in this Release
        files: files.tgz
        prerelease: false
        draft: false
